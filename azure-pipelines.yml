pool:
  vmImage: ubuntu-22.04

trigger:
  branches:
    include:
    - main
    - features/*
  paths:
    exclude:
    - .circleci/config.yml
    - .github/workflows/build.yml
    - .vscode/**
    - appveyor.yml
    - LICENSE
    - README.md

steps:
- task: UseDotNet@2
  displayName: 'Install .NET SDK 8'
  inputs:
    packageType: sdk
    version: 8.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: UseDotNet@2
  displayName: 'Install .NET SDK 7 for Endor Scan'
  inputs:
    packageType: sdk
    version: 7.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- bash: |
    dotnet restore
  displayName: 'Restoring "Cake.Tool" .NET local tool'

- bash: |
    dotnet build
  displayName: 'Build'

- bash: |
    curl https://api.endorlabs.com/download/latest/endorctl_linux_amd64 -o endorctl  
    chmod +x ./endorctl
    # Function to calculate the date 15 days from today calculate_expiration_date() { date -u -d "$(date -u '+%Y-%m-%dT%H:%M:%S.%NZ') +15 days" '+%Y-%m-%dT%H:%M:%S.%NZ'}
    # API call
    response=$(endorctl api create -r APIKey -n nate-learn -d '{"meta":{"name":"test_key_ctl_2"}, "spec":{"expiration_time":"'$(calculate_expiration_date)'", "permissions":{ "roles":["SYSTEM_ROLE_ADMIN"]}}}')
    # Parse response and assign values to environment variables
    ENDOR_API_CREDENTIALS_SECRET=$(echo "$response" | jq -r '.spec.secret')
    ENDOR_API_CREDENTIALS_KEY=$(echo "$response" | jq -r '.spec.key')
    # Export environment variables if needed in the calling shell
    export ENDOR_API_CREDENTIALS_SECRET
    export ENDOR_API_CREDENTIALS_KEY
    ./endorctl scan --api-key $(ENDOR_API_CREDENTIALS_KEY) --api-secret $(ENDOR_API_CREDENTIALS_SECRET) --as-default-branch=true --detached-ref-name=master -n nate-learn --exclude="(./src/ExtraLogic.*)|(.*HelloTests.*)"
  displayName: 'Endor Scan'
